<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ddup.sys.model.Role">
    <!-- <cache/> -->
	<resultMap id="BaseResultMap" type="Role">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="description" property="description" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<resultMap id="detailRoleResult" type="Role">
	
	</resultMap>
	
	<sql id="Base_Column_List">
		id, name, description, create_time, update_time
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from sys_role
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		sys_role
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.ddup.sys.model.Role" keyProperty="id">
		insert into sys_role (id,
		name,
		description, create_time, update_time
		)
		values
		(#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
		#{description,jdbcType=VARCHAR},
		#{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.ddup.sys.model.Role" keyProperty="id">
		insert into sys_role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="name != null">
				name,
			</if>
			<if test="description != null">
				description,
			</if>
				create_time,
				update_time
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				#{description,jdbcType=VARCHAR},
			</if>
				NOW(),
                NOW()
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.ddup.sys.model.Role">
		update sys_role
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				description = #{description,jdbcType=VARCHAR},
			</if>
			    update_time = NOW()
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.ddup.sys.model.Role">
		update sys_role
		set name = #{name,jdbcType=VARCHAR},
		description =
		#{description,jdbcType=VARCHAR},
		create_time =
		#{createTime,jdbcType=TIMESTAMP},
		update_time =
		#{updateTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<!-- 返回resultMap的list -->
	<select id="list" parameterType="map" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sys_role
		<where>
			<if test="fuzzyWord!=null">
				and (name like "%"#{fuzzyWord}"%"
				or description like
				"%"#{fuzzyWord}"%")
			</if>
		</where>
	</select>

	<!-- 获取传入的一些列来list -->
	<select id="listSelectedColumns" parameterType="map" resultType="map">
		select ${columns} from sys_role s
		<if test="userId!=null">
			inner join sys_role_privilege rp on s.id=rp.privilege_id
		</if>

		<where>
			<if test="userId!=null">
				and rp.role_id in select role_id from sys_user_role ur
				where ur.user_id
				= #{userId}
			</if>

		</where>
	</select>
	
	<!-- 在关联表sys_role_privilege中插入关系 -->
	<insert id="insertRolePrivilege" parameterType="java.util.Map">
	    insert into sys_role_privilege(role_id,privilege_id) values 
	    <foreach collection="pIds" item="pId" separator=",">
	       (#{roleId},#{pId})
	    </foreach>
	</insert>
	
	<!-- 删除角色数组有cascade -->
	<delete id="deleteByPrimaryKeys" parameterType="map">
        delete from sys_role where id in 
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id,jdbcType=INTEGER}
        </foreach>
    </delete>
    
    <!-- 单独删除关系表 -->
    <delete id="deleteRolePrivilege" parameterType="java.lang.Integer">
        delete from sys_role_privilege where role_id = #{id,jdbcType=INTEGER}
    </delete>
    
    <select id="listModelsByMap" parameterType="map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from sys_role 
        <where>
            <if test="fuzzyWord!=null">
                and (name like "%"#{fuzzyWord}"%"
                    or description like "%"#{fuzzyWord}"%")
            </if>
        </where>
    </select>
    
    <select id="listMapsByMap" parameterType="map" resultType="map">
        select ${columns_select} from sys_role r
        <where>
            <if test="userId != null">
                and r.id in (select role_id from sys_user_role ur
                where ur.user_id
                = #{userId})
            </if>
            <if test="fuzzyWord!=null">
                and (r.name like "%"#{fuzzyWord}"%"
                    or r.description like "%"#{fuzzyWord}"%")
            </if>
        </where>
    </select>
	
	<!-- 根据传入某个参数，来计数 -->
    <select id="countSelectedProperty" parameterType="Role" resultType="java.lang.Integer">
       select count(*) from sys_role r 
       <where>
           <if test="name != null">
               and r.name = #{name,jdbcType=VARCHAR}
           </if>
       </where>
    </select>
    
    <!-- 获取关联表sys_role_privilege中的记录 -->
    <select id="listRPMapsByMap" parameterType="map" resultType="map">
        select role_id as roleId,privilege_id as privilegeId from sys_role_privilege 
        <where>
            <if test="roleId != null">
                and role_id = #{roleId}
            </if>
            <if test="privilegeId != null">
                and privilege_id = #{privilegeId}
            </if>
        </where>
    </select>
</mapper>